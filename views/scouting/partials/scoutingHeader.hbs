<div class="navbar-backdrop hidden"></div>
<nav class="navbar hidden">
    <div class="navbar-header">
        <h1>TPW Scouting App</h1>
        <button class="navbar-close-btn"></button>
    </div>
    <a data-page="home" href="#/">Home</a>
    <a data-page="scan-data" href="#/scan-data">Upload Data</a>
    <a data-page="view-data" href="#/view-data">View Data/Analysis</a>
    <a data-page="compare-teams" href="#/compare-teams">Compare Teams</a>
    <a data-page="predict-outcomes" href="#/predict-outcomes">Predict Outcomes</a>
    <a data-page="log-out" href="/scouting/logout">Log Out</a>
</nav>
<header>
    <button class="navbar-open-btn"></button>
    <h3>{{shorten username 10}} ({{team}})</h3>
    <div class="header-incentives">
      <div class="currency">
        <div class="nuts">
          <p>{{ incentives.nuts }}</p>
          <img src="/img/nuts.png" />
        </div>
        <div class="bolts">
          <p>{{ incentives.bolts }}</p>
          <img src="/img/bolts.png" />
        </div>
      </div>
      <div class="xp">
        <div class="xp-container">
          <div class="xp-filled" style="width: {{ percent incentives.progress }};"></div>
          <p>{{ incentives.level }}</p>
        </div>
      </div>
    </div>
</header>

<script defer>
    const navbar = document.querySelector(".navbar");
    const backdrop = document.querySelector(".navbar-backdrop");
    window.readerForNav = {
      stop: () => {}
    };

    function openNavbar() {
        navbar.classList.remove("hidden");
        backdrop.classList.remove("hidden");
        setTimeout(() => {
            navbar.classList.add("open");
            backdrop.classList.add("open");
        }, 0);
    }

    function closeNavbar() {
        navbar.classList.remove("open");
        backdrop.classList.remove("open");
        setTimeout(() => {
            navbar.classList.add("hidden");
            backdrop.classList.add("hidden");
        }, 250);
    }

    document.querySelector(".navbar-open-btn").onclick = openNavbar;
    document.querySelector(".navbar-close-btn").onclick = closeNavbar;
    backdrop.onclick = closeNavbar;

    document.querySelector(".navbar a[data-page='home']").onclick =
        async (e) => {
          e.preventDefault();
          if(!["#/scan-data", "#/view-data", "#/compare-teams", "#/predict-outcomes", "#/admin"].includes(window.location.hash)) {
              try {
                  updatePage();
              } catch(err) {

              }
              // window.location.reload();
          } else {
              window.location.hash = "#/";
              // await sdk.showHomePage();
          }
        };
    document.querySelector(".navbar a[data-page='scan-data']").onclick =
        async (e) => {
          e.preventDefault();
          if(window.location.hash == "#/scan-data") {
              try {
                  updatePage();
              } catch(err) {

              }
              // window.location.reload();
          } else {
              window.location.hash = "#/scan-data";
              // window.readerForNav = await sdk.showScannerPage();
          }
        };
    document.querySelector(".navbar a[data-page='view-data']").onclick =
        async (e) => {
          e.preventDefault();
          if(window.location.hash == "#/view-data") {
              try {
                  updatePage();
              } catch(err) {

              }
              // window.location.reload();
          } else {
            window.location.hash = "#/view-data";
            // await sdk.showDataPage();
          }
        };
    document.querySelector(".navbar a[data-page='compare-teams']").onclick =
        async (e) => {
          e.preventDefault();
          if(window.location.hash == "#/compare-teams") {
              try {
                  updatePage();
              } catch(err) {

              }
              // window.location.reload();
          }
          window.location.hash = "#/compare-teams";
          // await sdk.showComparePage();
        };
    document.querySelector(".navbar a[data-page='predict-outcomes']").onclick =
        async (e) => {
          e.preventDefault();
          if(window.location.hash == "#/predict-outcomes") {
              try {
                  updatePage();
              } catch(err) {

              }
              // window.location.reload();
          }
          window.location.hash = "#/predict-outcomes";
          // await sdk.showPredictPage();
        };
    document.querySelector(".navbar a[data-page='log-out']").onclick =
        async (e) => {
          e.preventDefault();
          window.location.href = "/scouting/logout";
        };

    document.querySelectorAll(".navbar a").forEach((a) => {
        a.addEventListener("click", async () => {
            if (window.readerForNav) {
                try {
                    await window.readerForNav.stop();
                } catch (err) {}
            }

            document.querySelector(".navbar a.active").classList.remove("active");
            a.classList.add("active");
            
            closeNavbar();
        });
    });
</script>